高级传感器数据同步方法实现细节

1. 数据结构设计
---------------
使用面向对象的方式，创建 SensorDataSynchronizer 类来处理同步任务。主要属性包括：
- window_size: 滑动窗口大小，默认100个数据点
- max_time_diff_ms: 最大允许的时间差，默认3毫秒

2. 数据预处理
---------------
2.1 时间标准化
    - 将字符串时间戳转换为 datetime 对象
    - 计算相对于起始时间的秒数，便于后续处理
    - 统一时间基准，确保两个传感器的数据在同一时间范围内

2.2 数据清理
    - 移除无效的时间戳
    - 处理缺失值
    - 确保数据按时间排序

3. 时间漂移检测
---------------
3.1 滚动统计分析
    - 计算时间差的滚动平均值
    - 计算时间差的滚动标准差
    - 使用3倍标准差规则检测异常点

3.2 漂移点标记
    - 记录显著偏离的时间点
    - 保存漂移统计信息供后续分析

4. 数据插值处理
---------------
4.1 创建统一时间点
    - 确定有效的时间范围
    - 创建固定间隔（10ms）的时间点序列

4.2 三次样条插值
    - 对每个数值列进行插值
    - 使用 cubic spline 方法确保平滑性
    - 处理边界条件（外推）

5. 滑动窗口处理
---------------
5.1 窗口设计
    - 窗口大小：100个数据点
    - 重叠率：50%
    - 自适应窗口（处理数据末尾）

5.2 窗口处理流程
    - 提取窗口数据
    - 计算质量指标
    - 合并处理结果

6. 数据质量评估
---------------
6.1 质量指标
    - 方差：衡量数据波动
    - 缺失数据比例
    - 信噪比：mean/std

6.2 质量分数计算
    - 磁力计数据质量评分
    - INS数据质量评分
    - 窗口索引追踪

7. 信号处理
---------------
7.1 数据平滑
    - 使用 Savitzky-Golay 滤波器
    - 窗口长度：11点
    - 多项式阶数：3

7.2 异常值处理
    - 检测异常值
    - 平滑或移除异常值

8. 数据合并与输出
---------------
8.1 数据组织
    - 时间戳对齐
    - 传感器数据合并
    - 质量指标添加

8.2 输出格式
    - CSV文件存储
    - 包含原始数据和处理后数据
    - 包含质量评估指标

9. 性能优化
---------------
9.1 计算效率
    - 使用向量化操作
    - 避免循环处理
    - 优化内存使用

9.2 精度控制
    - 保持足够的数值精度
    - 控制插值误差
    - 确保时间同步精度

10. 使用建议
---------------
10.1 参数调优
    - 窗口大小选择
    - 时间差阈值设置
    - 质量评分阈值

10.2 注意事项
    - 数据预处理的重要性
    - 时间漂移的影响
    - 质量评估的使用

11. 改进方向
---------------
11.1 可能的优化
    - 自适应窗口大小
    - 多传感器支持
    - 实时处理能力

11.2 扩展功能
    - 可视化模块
    - 数据验证工具
    - 配置文件支持
